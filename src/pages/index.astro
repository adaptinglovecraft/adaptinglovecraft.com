---
import Layout from "../layouts/Layout.astro";

import Card from "../components/Card.astro";
import SubmissionTable from "../components/SubmissionTable";

import { getCollection, CollectionEntry } from "astro:content";
const allSubmissions: CollectionEntry<"submissions">[] = await getCollection(
  "submissions"
);
const allSubmissionsWithoutDrafts = allSubmissions
  .filter((post) => !post.data.draft)
  .sort((a, b) => {
    const aDate = new Date(a.data.date).getTime() / 1000;
    const bDate = new Date(b.data.date).getTime() / 1000;
    return bDate - aDate;
  });

const timefilteredSubmissionsWithoutDrafts = allSubmissionsWithoutDrafts.filter(
  (post) => new Date(post.data.date).getTime() < new Date().getTime()
);

const pinnedSubmissions = timefilteredSubmissionsWithoutDrafts.filter(
  (post) => post.data.pinned
);
const unpinnedSubmissions = timefilteredSubmissionsWithoutDrafts.filter(
  (post) => !post.data.pinned
);

---

<Layout title="Adapting Lovecraft">
  <main>
    <h1>Adapting Lovecraft</h1>

    <div class="section">
      <div class="sideheadline"><h2>Latest Submissions</h2></div>
      <div class="card-grid">
        {
          pinnedSubmissions
            .map((post) => <Card submission={post} double />)
        }
        {
          unpinnedSubmissions.slice(0, 4)
            .map((post) => <Card submission={post} />)
        }
      </div>
    </div>
    <div class="section">
      <div class="sideheadline"><h2>All Submissions</h2></div>
      <div class="section-right">
        <div class="table-container">
          <SubmissionTable
            client:idle
            entries={timefilteredSubmissionsWithoutDrafts}
          />
        </div>
      </div>
    </div>
  </main>
</Layout>

<style>
  main {
    color: var(--text);
    margin: 0 auto;
    max-width: 1100px;
    min-height: 95dvh;
  }
  h1 {
    margin: 0.5rem 1rem 2rem;
    font-size: 3rem;
    font-weight: 800;
    text-align: center;
    line-height: 1.2;
  }
  main > * + * {
    margin-bottom: 2rem;
  }
  .sideheadline {
    font-size: 1.3rem;
    color: var(--grey-text);
  }
  .section {
    margin: 1.5rem;
    display: grid;
  }
  .card-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 0;
  }
  .section-right {
    background-color: var(--card);
    border-radius: 0.5rem;
  }
  @media (min-width: 800px) {
    .card-grid {
      display: grid;
      grid-template-columns: repeat(2, minmax(24ch, 1fr));
    }
  }
  @media (min-width: 1080px) {
    .section {
      grid-template-columns: 20ch 1fr;
    }
    .section-right {
      margin: 2rem 0 0;
    }
  }
</style>
