---
import Layout from "../../layouts/Layout.astro";
import { getCollection } from "astro:content";
import SubmissionTable from "../../components/SubmissionTable";
// 1. Generate a new path for every collection entry
export async function getStaticPaths() {
  const authors = await getCollection("authors");
  return authors.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}
// 2. When it's time to render, you can get the entry directly from the prop
const { entry } = Astro.props;
const { Content } = await entry.render();

const submissionsByThisAuthor = await getCollection(
  "submissions",
  (submission) => {
    return submission.data.author.slug === entry.slug;
  }
);

const authorSubmissionsWithoutDrafts = submissionsByThisAuthor.filter(
  (post) => !post.data.draft
);
const timefilteredSubmissionsWithoutDrafts =
  authorSubmissionsWithoutDrafts.filter(
    (post) => new Date(post.data.date).getTime() < new Date().getTime()
  );
---

<Layout title={entry.data.name + " | Adapting Lovecraft"}>
  <main>
    <h1>{entry.data.name}</h1>
    <div class="bio">
      <Content />
    </div>
    <div class="table-container">
      <h3>Submissions by {entry.data.name}</h3>
      <SubmissionTable client:idle entries={timefilteredSubmissionsWithoutDrafts} />
    </div>
  </main>
</Layout>

<style>
  .table-container {
    overflow-x: auto;
    background-color: var(--card);
    border-radius: 0.5rem;
  }
  .bio {
    font-size: 1.2rem;
    line-height: 1.5;
    margin: 0 1rem 2rem;
  }
  main {
    color: var(--text);
    margin: 0 auto;
    max-width: 1100px;
    min-height: 95dvh;
  }
  h1 {
    margin: 0.5rem 1rem 2rem;
    font-size: 3rem;
    font-weight: 800;
    text-align: center;
    line-height: 1.2;
  }
  h3 {
    text-align: center;
  }
  main > * + * {
    margin-bottom: 2rem;
  }
  .sideheadline {
    font-size: 1.3rem;
    color: var(--grey-text);
  }
  .section {
    margin: 1.5rem;
    display: grid;
  }
  .card-grid {
    display: flex;
    flex-direction: column;
    gap: 1rem;
    padding: 0;
  }
  .section-right {
    background-color: var(--card);
    border-radius: 0.5rem;
  }
  @media (min-width: 800px) {
    .card-grid {
      display: grid;
      grid-template-columns: repeat(2, minmax(24ch, 1fr));
    }
  }
  @media (min-width: 1080px) {
    .section {
      grid-template-columns: 20ch 1fr;
    }
    .section-right {
      margin: 2rem 0 0;
    }
  }
</style>
